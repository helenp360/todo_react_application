{"version":3,"sources":["TaskItem/TaskItem.js","TaskItemComplete/TaskItemComplete.js","TaskInput/TaskInput.js","TaskItemHeadingUrgent/TaskItemHeadingUrgent.js","TaskItemHeadingImportant/TaskItemHeadingImportant.js","TaskItemHeadingNonurgent/TaskItemHeadingNonurgent.js","App.js","serviceWorker.js","index.js"],"names":["TaskItem","props","className","completed","text","role","aria-label","type","onClick","completeTask","id","deleteTask","TaskItemComplete","class","TaskInput","useState","setText","urgency","setUrgency","placeholder","onChange","event","console","log","target","value","defaultValue","addTask","TaskItemHeadingUrgent","TaskItemHeadingImportant","TaskItemHeadingNonurgent","App","deleted","uuidv4","tasks","setTasks","urgentTasksActive","filter","task","urgentTasksCompleted","importantTasksActive","importantTasksCompleted","nonurgentTasksActive","nonurgentTasksCompleted","updatedTasks","map","newTask","length","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+YAkCeA,MA/Bf,SAAkBC,GAUhB,OAEE,yBAAKC,UAAS,oBAAiBD,EAAME,UAAY,qBAAuB,qBACtE,yBAAKD,UAAU,aACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,mCAAoCD,EAAMG,OAE5D,yBAAKF,UAAU,kDAAkDG,KAAK,QAAQC,aAAW,kBACjE,IAApBL,EAAME,WAAuB,4BAAQI,KAAK,SAASL,UAAU,0CAA0CM,QAbnH,WACEP,EAAMQ,aAAaR,EAAMS,MAYc,QAC/B,4BAAQH,KAAK,SAASL,UAAU,qBAAhC,QACA,4BAAQK,KAAK,SAASL,UAAU,wCAAwCM,QApBlF,WAEEP,EAAMU,WAAWV,EAAMS,MAkBf,e,MCIGE,MAzBf,SAA0BX,GAKxB,OAEE,yBAAKC,UAAU,sBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,4CAA2C,6BAAOD,EAAMG,QAE1E,yBAAKS,MAAM,2DAA2DR,KAAK,QAAQC,aAAW,iBAC5F,4BAAQC,KAAK,SAASL,UAAU,qBAAhC,QACA,4BAAQK,KAAK,SAASL,UAAU,oBAAoBM,QAd9D,WAEEP,EAAMU,WAAWV,EAAMS,MAYf,e,MCsCGI,MArDf,SAAmBb,GAAQ,IAAD,EACAc,mBAAS,IADT,mBACjBX,EADiB,KACXY,EADW,OAEMD,mBAAS,IAFf,mBAEjBE,EAFiB,KAERC,EAFQ,KAkBxB,OACE,yBAAKhB,UAAU,cAEb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,2BACEK,KAAK,OACLL,UAAU,eACVI,aAAW,kCACXa,YAAY,QACZC,SAxBV,SAA0BC,GACxBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzBT,EAAQK,EAAMG,OAAOC,QAuBbA,MAAQrB,IAGV,yBAAKF,UAAU,sBACb,4BACEA,UAAU,gBAAgBQ,GAAG,qBAC7BU,SA1BZ,SAA6BC,GAC3BC,QAAQC,IAAIF,EAAMG,OAAOC,OACzBP,EAAWG,EAAMG,OAAOC,QAyBdA,MAAQR,GACR,4BAAQS,cAAY,GAApB,qBACA,4BAAQD,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,gBAIJ,yBAAKvB,UAAU,sBACb,4BAAQA,UAAU,oBAAoBK,KAAK,SAASG,GAAG,gBAAgBF,QA/BjF,SAA4Ba,GAC1BpB,EAAM0B,QAAQvB,EAAMa,KA8BZ,Y,MCrCGW,MARf,SAA+B3B,GAC7B,OACE,yBAAKC,UAAU,4BACX,wCAAa,gCAAUD,EAAMG,KAAhB,WAAsC,6BAAnD,mB,MCKOyB,MARf,SAAkC5B,GAChC,OACE,yBAAKC,UAAU,4BACX,wCAAa,gCAAUD,EAAMG,KAAhB,cAAyC,6BAAtD,mB,MCKO0B,MARf,SAAkC7B,GAChC,OACE,yBAAKC,UAAU,4BACX,wCAAa,gCAAUD,EAAMG,KAAhB,eAA0C,6BAAvD,mBC+KO2B,MAxKf,WAAgB,IAAD,EAEehB,mBAAS,CACnC,CAACX,KAAM,eAAgBD,WAAW,EAAM6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eAC1E,CAAC7B,KAAM,kBAAmBD,WAAW,EAAO6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eAC9E,CAAC7B,KAAM,uBAAwBD,WAAW,EAAM6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eAClF,CAAC7B,KAAM,WAAYD,WAAW,EAAO6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eACvE,CAAC7B,KAAM,eAAgBD,WAAW,EAAO6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eAC3E,CAAC7B,KAAM,UAAWD,WAAW,EAAM6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eACrE,CAAC7B,KAAM,eAAgBD,WAAW,EAAO6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eAC3E,CAAC7B,KAAM,aAAcD,WAAW,EAAM6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eACxE,CAAC7B,KAAM,gBAAiBD,WAAW,EAAO6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,eAC5E,CAAC7B,KAAM,wBAAyBD,WAAW,EAAO6B,SAAS,EAAOf,QAAS,IAAKP,GAAIuB,iBAZzE,mBAELC,EAFK,KAEEC,EAFF,KAkBPC,EAAoBF,EAAMG,QAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKN,SAAkC,MAAfM,EAAKrB,UAAkC,IAAjBqB,EAAKnC,aAC5FoC,EAAuBL,EAAMG,QAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKN,SAAkC,MAAfM,EAAKrB,UAAkC,IAAjBqB,EAAKnC,aAG/FqC,EAAuBN,EAAMG,QAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKN,SAAkC,MAAfM,EAAKrB,UAAkC,IAAjBqB,EAAKnC,aAC/FsC,EAA0BP,EAAMG,QAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKN,SAAkC,MAAfM,EAAKrB,UAAkC,IAAjBqB,EAAKnC,aAGlGuC,EAAuBR,EAAMG,QAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKN,SAAkC,MAAfM,EAAKrB,UAAkC,IAAjBqB,EAAKnC,aAC/FwC,EAA0BT,EAAMG,QAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKN,SAAkC,MAAfM,EAAKrB,UAAkC,IAAjBqB,EAAKnC,aAExG,SAASQ,EAAWD,GAClB,IAAMkC,EAAeV,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAK5B,KAAOA,KACtDyB,EAASS,GAGX,SAASnC,EAAaC,GACpB,IAAMkC,EAAeV,EAAMW,KAAI,SAAAP,GAI7B,OAHGA,EAAK5B,KAAMA,IACZ4B,EAAKnC,WAAY,GAEZmC,KAGTH,EAASS,GAiBX,OACE,yBAAK1C,UAAU,OACb,4BAAQA,UAAU,cAChB,2CAGF,kBAAC,EAAD,CAAWyB,QApBf,SAAiBvB,EAAMa,GACrB,IAAM6B,EAAU,CACd1C,KAAMA,EACND,WAAW,EACX6B,SAAS,EACTf,QAASA,EACTP,GAAIuB,eAGAW,EAAY,sBAAQV,GAAR,CAAeY,IAEjCX,EAASS,MAUP,6BAEA,yBAAK1C,UAAU,aACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,qEACb,kBAAC,EAAD,CAAuBE,KAAOgC,EAAkBW,SAG/CX,EAAkBS,KAAI,SAAAP,GACrB,OAAO,kBAAC,EAAD,CACL7B,aAAeA,EACfE,WAAaA,EACbD,GAAK4B,EAAK5B,GACVsC,IAAMV,EAAK5B,GACXN,KAAOkC,EAAKlC,KACZD,UAAYmC,EAAKnC,UACjBc,QAAUqB,EAAKrB,aAIlBsB,EAAqBM,KAAI,SAAAP,GACxB,OAAO,kBAAC,EAAD,CACP3B,WAAaA,EACbD,GAAK4B,EAAK5B,GACVsC,IAAMV,EAAK5B,GACXN,KAAOkC,EAAKlC,KACZD,UAAWmC,EAAKnC,UAChBc,QAAUqB,EAAKrB,aAGjB,8BAKF,yBAAKf,UAAU,qEACb,kBAAC,EAAD,CAA0BE,KAAOoC,EAAqBO,SAErDP,EAAqBK,KAAI,SAAAP,GACxB,OAAO,kBAAC,EAAD,CACP7B,aAAeA,EACfE,WAAaA,EACbD,GAAK4B,EAAK5B,GACVsC,IAAMV,EAAK5B,GACXN,KAAOkC,EAAKlC,KACZD,UAAWmC,EAAKnC,UAChBc,QAAUqB,EAAKrB,aAGhBwB,EAAwBI,KAAI,SAAAP,GAC3B,OAAO,kBAAC,EAAD,CACP3B,WAAaA,EACbD,GAAK4B,EAAK5B,GACVsC,IAAMV,EAAK5B,GACXN,KAAOkC,EAAKlC,KACZD,UAAWmC,EAAKnC,UAChBc,QAAUqB,EAAKrB,aAGjB,8BAKF,yBAAKf,UAAU,qEACb,kBAAC,EAAD,CAA0BE,KAAOsC,EAAqBK,SAErDL,EAAqBG,KAAI,SAAAP,GACxB,OAAO,kBAAC,EAAD,CACP7B,aAAeA,EACfE,WAAaA,EACbD,GAAK4B,EAAK5B,GACVsC,IAAMV,EAAK5B,GACXN,KAAOkC,EAAKlC,KACZD,UAAWmC,EAAKnC,UAChBc,QAAUqB,EAAKrB,aAGhB0B,EAAwBE,KAAI,SAAAP,GAC3B,OAAO,kBAAC,EAAD,CACP3B,WAAaA,EACbD,GAAK4B,EAAK5B,GACVsC,IAAMV,EAAK5B,GACXN,KAAOkC,EAAKlC,KACZD,UAAWmC,EAAKnC,UAChBc,QAAUqB,EAAKrB,aAIjB,kCC7JQgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5C,QAAQ4C,MAAMA,EAAMC,c","file":"static/js/main.8ce7374b.chunk.js","sourcesContent":["import React from 'react';\nimport './TaskItem.css';\n\nfunction TaskItem(props) {\n  function handleDeleteClick() {\n    // console.log(\"The delete button has been clicked\");\n    props.deleteTask(props.id);\n  }\n\n  function handleCompleteClick() {\n    props.completeTask(props.id);\n  }\n\n  return (\n    \n    <div className={ `task-item ${ props.completed ? \"task-item-complete\" : \"task-item-active\"}`}>\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-7\">\n            <span className=\"list-group-item task-item__text\">{ props.text }</span>\n          </div>\n          <div className=\"col-5 task-item__buttons btn-group btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n            { props.completed === false && <button type=\"button\" className=\"btn btn-secondary task__complete-button\" onClick={ handleCompleteClick }>Done</button> }\n            <button type=\"button\" className=\"btn btn-secondary\">Edit</button>\n            <button type=\"button\" className=\"btn btn-secondary task__delete-button\" onClick={ handleDeleteClick }>Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n  \n  );\n}\n\nexport default TaskItem;","import React from 'react';\nimport './TaskItemComplete.css';\n\nfunction TaskItemComplete(props) {\n  function handleDeleteClick() {\n    // console.log(\"The delete button has been clicked\");\n    props.deleteTask(props.id);\n  }\n  return (\n    \n    <div className=\"task-item-complete\">\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-7\">\n            <span className=\"list-group-item task-item-complete__text\"><del>{ props.text }</del></span>\n          </div>\n          <div class=\"col-5 task-item-complete__buttons btn-group btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n            <button type=\"button\" className=\"btn btn-secondary\">Edit</button>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={ handleDeleteClick }>Delete</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n  \n  );\n}\n\nexport default TaskItemComplete;","import React, { useState } from 'react';\nimport './TaskInput.css';\n\nfunction TaskInput(props) {\n  const [text, setText] = useState(\"\");\n  const [urgency, setUrgency] = useState(\"\"); //number?\n\n  function handleTextChange(event) {\n    console.log(event.target.value);\n    setText(event.target.value);\n  }\n\n  function handleUrgencyChange(event) { //up to 25:48 in video\n    console.log(event.target.value);\n    setUrgency(event.target.value);\n  }\n\n  function handleAddTaskClick(event) {\n    props.addTask(text, urgency);\n  }\n  \n  return (\n    <div className=\"task-input\">\n  \n      <div className=\"container\">\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Text input with dropdown button\"\n            placeholder=\"What?\"\n            onChange={ handleTextChange }\n            value={ text }\n            />\n      \n          <div className=\"input-group-append\">\n            <select\n              className=\"custom-select\" id=\"inputGroupSelect02\"\n              onChange={ handleUrgencyChange }\n              value={ urgency }>\n              <option defaultValue>How urgent is it?</option>\n              <option value=\"1\">Urgent</option>\n              <option value=\"2\">Important</option>\n              <option value=\"3\">Non-urgent</option>\n              \n            </select>\n          </div>\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-secondary\" type=\"button\" id=\"button-addon2\" onClick={ handleAddTaskClick }>Add</button>\n          </div>\n        </div>\n      </div>\n  </div>\n  );\n}\n\nexport default TaskInput;","import React from 'react';\nimport './TaskItemHeadingUrgent.css';\n\nfunction TaskItemHeadingUrgent(props) {\n  return (\n    <div className=\"task-list-heading-urgent\">\n        <h2>You have <strong>{ props.text } URGENT</strong><br></br>things to do!</h2>\n    </div>\n  );\n}\n\nexport default TaskItemHeadingUrgent;\n\n","import React from 'react';\nimport './TaskItemHeadingImportant.css';\n\nfunction TaskItemHeadingImportant(props) {\n  return (\n    <div className=\"task-list-heading-urgent\">\n        <h2>You have <strong>{ props.text } important</strong><br></br>things to do!</h2>\n    </div>\n  );\n}\n\nexport default TaskItemHeadingImportant;\n","import React from 'react';\nimport './TaskItemHeadingNonurgent.css';\n\nfunction TaskItemHeadingNonurgent(props) {\n  return (\n    <div className=\"task-list-heading-urgent\">\n        <h2>You have <strong>{ props.text } non-urgent</strong><br></br>things to do!</h2>\n    </div>\n  );\n}\n\nexport default TaskItemHeadingNonurgent;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.css';\nimport TaskItem from \"./TaskItem/TaskItem\"\nimport TaskItemComplete from \"./TaskItemComplete/TaskItemComplete\"\n\nimport TaskInput from \"./TaskInput/TaskInput\"\nimport TaskItemHeadingUrgent from \"./TaskItemHeadingUrgent/TaskItemHeadingUrgent\"\nimport TaskItemHeadingImportant from \"./TaskItemHeadingImportant/TaskItemHeadingImportant\"\nimport TaskItemHeadingNonurgent from \"./TaskItemHeadingNonurgent/TaskItemHeadingNonurgent\"\n\n\nfunction App() {\n\n  const [ tasks, setTasks ] = useState([\n    {text: \"Walk the dog\", completed: true, deleted: false, urgency: \"1\", id: uuidv4()},\n    {text: \"Mop the kitchen\", completed: false, deleted: false, urgency: \"2\", id: uuidv4()},\n    {text: \"Empty the dishwasher\", completed: true, deleted: false, urgency: \"2\", id: uuidv4()},\n    {text: \"Ring Mum\", completed: false, deleted: false, urgency: \"2\", id: uuidv4()},\n    {text: \"Wash the car\", completed: false, deleted: false, urgency: \"3\", id: uuidv4()},\n    {text: \"Ironing\", completed: true, deleted: false, urgency: \"3\", id: uuidv4()},\n    {text: \"Mow the lawn\", completed: false, deleted: false, urgency: \"3\", id: uuidv4()},\n    {text: \"Email work\", completed: true, deleted: false, urgency: \"1\", id: uuidv4()},\n    {text: \"Return parcel\", completed: false, deleted: false, urgency: \"3\", id: uuidv4()},\n    {text: \"Finish react homework\", completed: false, deleted: false, urgency: \"1\", id: uuidv4()},\n  ]);\n\n  // const activeTasks = tasks.filter(task => !task.completed);\n\n  // const urgentTasks = tasks.filter(task => task.deleted===false && task.urgency===\"1\");\n  const urgentTasksActive = tasks.filter(task => task.deleted===false && task.urgency===\"1\" && task.completed===false);\n  const urgentTasksCompleted = tasks.filter(task => task.deleted===false && task.urgency===\"1\" && task.completed===true);\n\n  // const importantTasks = tasks.filter(task => task.deleted===false && task.urgency===\"2\");\n  const importantTasksActive = tasks.filter(task => task.deleted===false && task.urgency===\"2\" && task.completed===false);\n  const importantTasksCompleted = tasks.filter(task => task.deleted===false && task.urgency===\"2\" && task.completed===true);\n\n  // const nonurgentTasks = tasks.filter(task => task.deleted===false && task.urgency===\"3\");\n  const nonurgentTasksActive = tasks.filter(task => task.deleted===false && task.urgency===\"3\" && task.completed===false);\n  const nonurgentTasksCompleted = tasks.filter(task => task.deleted===false && task.urgency===\"3\" && task.completed===true);\n\n  function deleteTask(id) {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  }\n\n  function completeTask(id) {\n    const updatedTasks = tasks.map(task => {\n      if(task.id ===id) {\n        task.completed = true;\n      }\n      return task;\n    })\n\n    setTasks(updatedTasks);\n  }\n\n  function addTask(text, urgency) {\n    const newTask = {\n      text: text,\n      completed: false,\n      deleted: false,\n      urgency: urgency,\n      id: uuidv4()\n    }\n\n    const updatedTasks = [ ...tasks, newTask ]\n\n    setTasks(updatedTasks);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>To Do List</h1>\n      </header>\n\n      <TaskInput addTask={ addTask }/>\n      <br></br>\n\n      <div className=\"container\">\n        <div className=\"row\">\n\n          <div className=\"list-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 task-list\">\n            <TaskItemHeadingUrgent text={ urgentTasksActive.length }/>\n          \n            {/* {urgentTasks.map(task => <TaskItem key={ task.id } text={ task.text } completed={task.completed} />)} */}\n            {urgentTasksActive.map(task => {\n              return <TaskItem\n                completeTask={ completeTask }\n                deleteTask={ deleteTask }\n                id={ task.id }\n                key={ task.id }\n                text={ task.text }\n                completed={ task.completed }\n                urgency={ task.urgency } />\n            })}\n            \n            \n            {urgentTasksCompleted.map(task => {\n              return <TaskItemComplete\n              deleteTask={ deleteTask }\n              id={ task.id }\n              key={ task.id }\n              text={ task.text }\n              completed={task.completed}\n              urgency={ task.urgency } />\n            })}\n            \n            <br></br>\n\n\n          </div>  \n\n          <div className=\"list-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 task-list\">\n            <TaskItemHeadingImportant text={ importantTasksActive.length }/>\n\n            {importantTasksActive.map(task => {\n              return <TaskItem\n              completeTask={ completeTask }\n              deleteTask={ deleteTask }\n              id={ task.id }\n              key={ task.id }\n              text={ task.text }\n              completed={task.completed}\n              urgency={ task.urgency } />\n            })}\n            \n            {importantTasksCompleted.map(task => {\n              return <TaskItemComplete\n              deleteTask={ deleteTask }\n              id={ task.id }\n              key={ task.id }\n              text={ task.text }\n              completed={task.completed}\n              urgency={ task.urgency } />\n            })}\n            \n            <br></br>\n\n            \n          </div>\n\n          <div className=\"list-group col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 task-list\">\n            <TaskItemHeadingNonurgent text={ nonurgentTasksActive.length }/>\n          \n            {nonurgentTasksActive.map(task => {\n              return <TaskItem\n              completeTask={ completeTask }\n              deleteTask={ deleteTask }\n              id={ task.id }\n              key={ task.id }\n              text={ task.text }\n              completed={task.completed}\n              urgency={ task.urgency } />\n            })}\n            \n            {nonurgentTasksCompleted.map(task => {\n              return <TaskItemComplete\n              deleteTask={ deleteTask }\n              id={ task.id }\n              key={ task.id }\n              text={ task.text }\n              completed={task.completed}\n              urgency={ task.urgency } />\n            })}\n\n          \n            <br></br>\n\n          \n          </div>     \n\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}